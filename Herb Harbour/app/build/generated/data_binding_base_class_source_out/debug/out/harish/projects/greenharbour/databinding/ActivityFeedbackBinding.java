// Generated by view binder compiler. Do not edit!
package harish.projects.greenharbour.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import harish.projects.greenharbour.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityFeedbackBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final EditText comment;

  @NonNull
  public final EditText features;

  @NonNull
  public final EditText like;

  @NonNull
  public final EditText suggest;

  private ActivityFeedbackBinding(@NonNull LinearLayout rootView, @NonNull EditText comment,
      @NonNull EditText features, @NonNull EditText like, @NonNull EditText suggest) {
    this.rootView = rootView;
    this.comment = comment;
    this.features = features;
    this.like = like;
    this.suggest = suggest;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityFeedbackBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityFeedbackBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_feedback, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityFeedbackBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.comment;
      EditText comment = ViewBindings.findChildViewById(rootView, id);
      if (comment == null) {
        break missingId;
      }

      id = R.id.features;
      EditText features = ViewBindings.findChildViewById(rootView, id);
      if (features == null) {
        break missingId;
      }

      id = R.id.like;
      EditText like = ViewBindings.findChildViewById(rootView, id);
      if (like == null) {
        break missingId;
      }

      id = R.id.suggest;
      EditText suggest = ViewBindings.findChildViewById(rootView, id);
      if (suggest == null) {
        break missingId;
      }

      return new ActivityFeedbackBinding((LinearLayout) rootView, comment, features, like, suggest);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
